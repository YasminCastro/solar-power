{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Solar Power"
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Cadastro",
        "operationId": "signup",
        "tags": ["Auth"],
        "requestBody": {
          "$ref": "/api/components/Signup/RequestBody.json"
        },
        "responses": {
          "$ref": "/api/components/Signup/Responses.json"
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "operationId": "login",
        "tags": ["Auth"],
        "requestBody": {
          "$ref": "/api/components/Login/RequestBody.json"
        },
        "responses": {
          "$ref": "/api/components/Login/Responses.json"
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Buscar todos usu치rios",
        "operationId": "getUsers",
        "tags": ["Users"],
        "responses": {
          "$ref": "/api/components/Users/Get/Responses.json"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },

      "put": {
        "summary": "Atualizar usu치rio",
        "operationId": "updateUser",
        "tags": ["Users"],
        "requestBody": {
          "$ref": "/api/components/Users/Update/RequestBody.json"
        },
        "responses": {
          "$ref": "/api/components/Users/Update/Responses.json"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "delete": {
        "summary": "Excluir Usu치rio",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "responses": {
          "$ref": "/api/components/Users/Delete/Responses.json"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "Buscar usu치rio por ID",
        "operationId": "getUser",
        "tags": ["Users"],
        "responses": {
          "$ref": "/api/components/Users/GetOne/Responses.json"
        }
      }
    },

    "/inverter": {
      "post": {
        "summary": "Criar Inversor",
        "operationId": "createInverter",
        "tags": ["Inverters"],
        "requestBody": {
          "$ref": "/api/components/Inverter/Create/RequestBody.json"
        },
        "responses": {
          "$ref": "/api/components/Inverter/Create/Responses.json"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },

      "put": {
        "summary": "Atualizar Inversor",
        "operationId": "updateInverter",
        "tags": ["Inverters"],
        "requestBody": {
          "$ref": "/api/components/Inverter/Update/RequestBody.json"
        },
        "responses": {
          "$ref": "/api/components/Inverter/Update/Responses.json"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },

    "/pets": {
      "get": {
        "summary": "List all pets",
        "operationId": "listPets",
        "tags": ["pets"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of pets",
            "headers": {
              "x-next": {
                "description": "A link to the next page of responses",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pets"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a pet",
        "operationId": "createPets",
        "tags": ["pets"],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "summary": "Info for a specific pet",
        "operationId": "showPetById",
        "tags": ["pets"],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Pets": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Pet"
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
